classdef CircuitSet
    properties
        CircuitIndex=[];
        CircuitChoose;
%     end
%     properties(Dependent)
        AX;
        AY;
        BX;
        BY;
        CX;
        CY;
        SplitNum;
        SplitRadius;
        LineRadius;
        Voltage;
        Current;
        CircuitCheck=0;
    end
    methods
        function obj=Add(obj,AX,AY,BX,BY,CX,CY,SplitNum,SplitRadius,LineRadius,Voltage,Current)
            L=length(obj.CircuitIndex);
            if(L==0)
                obj.CircuitIndex=Circuit;
            else
                obj.CircuitIndex(L+1)=Circuit;
            end
            obj.CircuitIndex(L+1)=obj.CircuitIndex(L+1).AssignCircuit(AX,AY,BX,BY,CX,CY,SplitNum,SplitRadius,LineRadius,Voltage,Current);
            obj.CircuitChoose=L+1;
            obj.AX=[obj.AX,AX];
            obj.AY=[obj.AY,AY];
            obj.BX=[obj.BX,BX];
            obj.BY=[obj.BY,BY];
            obj.CX=[obj.CX,CX];
            obj.CY=[obj.CY,CY];
            obj.SplitNum=[obj.SplitNum,SplitNum];
            obj.SplitRadius=[obj.SplitRadius,SplitRadius];
            obj.LineRadius=[obj.LineRadius,LineRadius];
            obj.Voltage=[obj.Voltage,Voltage];
            obj.Current=[obj.Current,Current];
            obj.CircuitCheck=1;
        end
        function obj=Delete(obj)
            obj.CircuitIndex(obj.CircuitChoose)=[];
            obj.AX(obj.CircuitChoose)=[];
            obj.AY(obj.CircuitChoose)=[];
            obj.BX(obj.CircuitChoose)=[];
            obj.BY(obj.CircuitChoose)=[];
            obj.CX(obj.CircuitChoose)=[];
            obj.CY(obj.CircuitChoose)=[];
            obj.SplitNum(obj.CircuitChoose)=[];
            obj.SplitRadius(obj.CircuitChoose)=[];
            obj.LineRadius(obj.CircuitChoose)=[];
            obj.Voltage(obj.CircuitChoose)=[];
            obj.Current(obj.CircuitChoose)=[];
            obj.CircuitCheck=1;
            if(obj.CircuitChoose>1)
                obj.CircuitChoose=obj.CircuitChoose-1;
            else
                obj.CircuitChoose=1;
            end
        end
        function obj=Change(obj,AX,AY,BX,BY,CX,CY,SplitNum,SplitRadius,LineRadius,Voltage,Current)
            obj.CircuitIndex(obj.CircuitChoose)=obj.CircuitIndex(obj.CircuitChoose).AssignCircuit(AX,AY,BX,BY,CX,CY,SplitNum,SplitRadius,LineRadius,Voltage,Current);
            if(obj.AX(obj.CircuitChoose)==AX&&obj.AY(obj.CircuitChoose)==AY&&obj.BX(obj.CircuitChoose)==BX&&obj.BY(obj.CircuitChoose)==BY&&obj.CX(obj.CircuitChoose)==CX&&obj.CY(obj.CircuitChoose)==CY&&obj.SplitNum(obj.CircuitChoose)==SplitNum&&obj.SplitRadius(obj.CircuitChoose)==SplitRadius&&obj.LineRadius(obj.CircuitChoose)==LineRadius&&obj.Voltage(obj.CircuitChoose)==Voltage&&obj.Current(obj.CircuitChoose)==Current)
                ;
            else
                obj.CircuitCheck=1;
            end
            obj.AX(obj.CircuitChoose)=AX;
            obj.AY(obj.CircuitChoose)=AY;
            obj.BX(obj.CircuitChoose)=BX;
            obj.BY(obj.CircuitChoose)=BY;
            obj.CX(obj.CircuitChoose)=CX;
            obj.CY(obj.CircuitChoose)=CY;
            obj.SplitNum(obj.CircuitChoose)=SplitNum;
            obj.SplitRadius(obj.CircuitChoose)=SplitRadius;
            obj.LineRadius(obj.CircuitChoose)=LineRadius;
            obj.Voltage(obj.CircuitChoose)=Voltage;
            obj.Current(obj.CircuitChoose)=Current;
        end
    end
end